[[cap7]]
== Novo capítulo

[NOTE]
====
Perguntas para despertar e aguçar sua curiosidade e interesse:

. Há algum inteiro latexmath:[$n>2$] tal que latexmath:[$a^n + b^n = c^n$], onde latexmath:[$a, b, c$] são naturais? Faça umas tentativas. 
. Ao usarmos o Crivo de Erastóstenes, a cada vez mais naturais cortados vão ficando vizinhos em sequências enormes, e os primos ficando mais extremamente raros e espaçados. Você acha que existe um natural a partir do qual não há mais nenhum primo maior que ele (todos os naturais maiores que eles formam uma sequência de vizinhos crivados), de modo que o número de primos é finito? Por que sim ou por que não? 
. Você acha que determinar, com absoluta certeza, se um natural de 1000 dígitos é primo leva quanto tempo no mais rápido computador da loja da esquina? Horas? Anos? Milênios?
. Você sabe uma maneira eficiente de calcular latexmath[$a^b \mod{m}$] (todas as variáveis sendo naturais), quando a representação decimal de latexmath[$a$] pode ter até 10.000 dígitos, latexmath[$b$] até 8 dígitos, latexmath[$m$] até 4 dígitos?
====

*Nosso objetivo, neste capítulo*, é que, ao final dela, você domine as mais básicas noções e propriedades dos números inteiros, podendo responder às questões acima e outras, particularmente sabendo: como testar se um inteiro é primo ou não; de forma muito eficiente achar o máximo divisor comum (e o mínimo múltiplo comum) e onde podem ser usados em outros problemas; aritmética modular e congruências.

.Sempre vamos repetir
[TIP]
====
Estamos torcendo por você. O fórum de alunos, os tutores, e eu (o professor) queremos e vamos ajudá-lo (nessa ordem), mas você tem que ser determinado e disciplinado, *cada semana dedicando 4 a 8 horas para estudar este livro*.
====

.Conteúdo deste capítulo
____________________
* Definição: A Teoria dos Números
* Números Primos
** Testando Primalidade de n
** Contando os Primos
** Mais Algumas Poucas Coisas Sobre os Primos
* Divisibilidade
** Máximo Divisor Comum (mdc) (Greatest Common Divisor. gcd)
** Mínimo Múltiplo Comum (mmc) (Least Common Multiple. lcm)
* Aritmética Modular
** Problema 374 do ACM Programming Contest (BigMod)
* Congruências
** Operações Sobre Congruências
** Resolvendo Congruências Lineares
** Equações Diofantinas
* Triplas Pitagóricas
____________________

[NOTE]
====
Embora os conteúdos tenham sido aprofundados usando outras fontes, os tópicos foram ``pinçados'' a partir do Cap. 7 ``_Number Theory_'' do livro ``_Programming Challenges_'' de _Steven S. Skiena_ e _Miguel A. Revilla_ (download gratuito de http://acm.cs.buap.mx/downloads/Programming_Challenges.pdf). Portanto, provavelmente só cobrimos os cerca de 30% mais fáceis da Teoria dos Números, mas que têm mais aplicação prática nas competições de programação. Uma referência mais abrangente e profunda é http://mathworld.wolfram.com/topics/NumberTheory.html, com centenas de artigos em dezenas de assuntos. Mas qualquer dos livros textos da disciplina cobre todas as suas 7 unidades.
====

//_

=== Definição: A Teoria dos Números

Ou, simplesmente, ``aritmética'', ou ``aritmética superior'' é o ramo da Matemática Pura que estuda propriedades dos números em geral e, em particular, dos números inteiros, bem como a larga classe de problemas que surge no seu estudo. Mesmo sendo da Matemática Pura, a Teoria dos Números tem uma extraordinária importância prática, sendo a base para toda a área de criptografia moderna (que possibilita segurança no trânsito de informações vitais pela internet), sendo também a base para se conceber alguns algoritmos aceitavelmente eficientes ao invés de impraticavelmente lentos.

Exemplo de um dos mais famosos resultados da Teoria dos Números: 

.O Último Teorema de Fermat:
====
Não existe nenhum conjunto de inteiros positivos latexmath:[$a, b, c, n$], com latexmath:[$n > 2$], que satisfaça.

[latexmath]
++++
\[a^n + b^n = c^n\]
++++

A prova deste teorema, enunciado por Fermat em cerca de 1637, é tão difícil que somente foi achada por Wiles em 1995. E é muito longa e difícil para a discutirmos aqui. http://en.wikipedia.org/wiki/Fermat\'s_Last_Theorem#Wiles.27s_general_proof conta a história da evolução da prova ao longo dos séculos.
====

=== Números Primos

*Número primo* é qualquer natural latexmath:[$p \geq 2$] que somente seja divisível por si mesmo e por 1. Por exemplo: 7 é primo (porque só é divisível por si mesmo e por 1).

*Número composto* é qualquer natural latexmath:[$q \geq 2$] que não seja primo. (Isto é, além de divisível por 1 e por ele mesmo, é divisível pelo menos por algum outro natural.) Por exemplo: 6 é composto (isto é, não primo) (porque, além de divisível por si mesmo e por 1, o é por outros naturais: 2 e 3).

*Teorema Fundamental da Aritmética* ( http://pt.wikipedia.org/wiki/Teorema_fundamental_da_aritm%C3%A9tica ):

//_

Todos os números inteiros positivos maiores que 1 podem ser decompostos num produto de números primos, sendo esta decomposição única a menos de permutações dos fatores. (Este teorema foi exposto, pela primeira vez, no livro _IX dos Elementos_, de Euclides (13 volumes, escritos no ano de cerca de 300 aC). Mais formalmente:

[quote]
Seja latexmath:[$a>1$] um inteiro positivo. Então, existem primos positivos latexmath:[$p_1 \leq p_2 \leq \ldots \leq p_t$] tais que latexmath:[$a = p_1 p_2 \ldots p_t$], e essa decomposição é única.
 
(chamamos latexmath:[$p_1, \ldots , p_t$] de fatores primos de latexmath:[$a$]. Ao processo de encontrá-los, chamamos de fatoração (de latexmath:[$a$]) em primos) (Na fatoração de um número em primos poderá ser de utilidade a tabela dos primeiros 10000 números primos, em http://primes.utm.edu/lists/small/10000.txt )

*Demonstração:*

Existência de uma Decomposição:: +
Será usado para esta demonstração o _Princípio da Indução Completa_ (releia <<cap3>>). +
Para latexmath:[$a=2$] existe apenas a decomposição trivial em números primos latexmath:[$1 \times 2$], já que 2 é primo. Suponhamos agora 
que existe uma tal decomposição para todo inteiro latexmath:[$b$], latexmath:[$2 \leq b < a$]. Mostraremos que também existe para latexmath:[$a$]. +
Se latexmath:[$a$] é primo, admite somente a decomposição trivial latexmath:[$a = 1 \times a$]. +
Caso contrário, admite um divisor positivo latexmath:[$b$] tal que latexmath:[$1<b<a$]. Isto é, latexmath:[$a=bc$], e temos também latexmath:[$1<c<a$]. +
Pela hipótese indutiva, latexmath:[$b$] e latexmath:[$c$] podem ser escritos como produtos de primos, na forma latexmath:[$m= = p_1bp_2 \ldots p_s$], latexmath:[$c = = q_1 q_2 \ldots q_k$]. Substituindo, temos latexmath:[$a=p_1 \ldots p_s q_1 \ldots q_k$], e a referida decomposição também existe para latexmath:[$a$].

Unicidade da Decomposição:: 
Dado um inteiro latexmath:[$a$], ele poderia admitir, em princípio, mais de uma decomposição em produto de fatores primos. Chamemos de 
_comprimento de uma decomposição_ o número de fatores que nela comparecem. +
A demonstração será feita por indução no comprimento de uma decomposição de latexmath:[$a$]. +
Suponhamos que a admita uma decomposição do tipo latexmath:[$a = p_1$], onde latexmath:[$p_1$] é primo, e que vale latexmath:[$a = p_1 = q_1 q_2 \ldots q_s$] em que latexmath:[$q_1 \leq q_2 \leq \ldots \leq q_s$] são primos positivos. +
Como latexmath:[$q_1$] divide latexmath:[$q_1 q_2 \ldots q_s$], então latexmath:[$q_1$] também divide latexmath:[$p_1$], que é primo. Então,
 devemos ter latexmath:[$p_1 = q_1$]. Cancelando, vem latexmath:[$1 = q_2 \cdots q_s$]. Se latexmath:[$s > 1$], teríamos que o primo 
 latexmath:[$q_2$] seria inversível, uma contradição. Assim, latexmath:[$s = 1$] e, como já provamos que latexmath:[$p_1 = q_1$], o primeiro
 passo da indução está verificado. +
Suponhamos agora o resultado verdadeiro para todo inteiro que admita uma decomposição de comprimento latexmath:[$k \geq 1$], e seja a um inteiro com uma decomposição de comprimento latexmath:[$k+1$]. Se este inteiro a admitisse outra decomposição, teríamos latexmath:[$a = p_1 \cdots p_{k+1} = q_1 \cdots q_s$], em que latexmath:[$q_1 \leq q_2 \leq \cdots \leq q_s$] são primos positivos. +
Como, na primeira parte, latexmath:[$q_1$] divide latexmath:[$p_1 \cdots p_{k+1}$], consequentemente temos que latexmath:[$q_1$] divide 
latexmath:[$p_i$] para algum latexmath:[$i$] (Lema de Euclides). Como latexmath:[$p_i$] é primo, devemos ter novamente que latexmath:[$q_1 = p_i$]. Em particular, latexmath:[$q_1 \geq p_1$]. +
De forma análoga, pode-se obter que latexmath:[$p_1 = q_j$], para algum latexmath:[$j$]. Logo, latexmath:[$p_1 \geq q_1$]. De ambas as
 desigualdades, vem que latexmath:[$p_1 = q_1$]. Finalmente, cancelando em latexmath:[$a = p_1 \cdots p_{k+1} = q_1 \cdots q_s$], temos que
 latexmath:[$p_2 \cdots p_{k+1} = q_2 \cdots q_s$]. +
Agora, o primeiro membro da igualdade tem uma decomposição de comprimento latexmath:[$k$], logo, da hipótese de indução, admite uma única
 decomposição. Assim, temos latexmath:[$k = s-1$], donde latexmath:[$k+1=s$] e latexmath:[$p_i = q_i$], para latexmath:[$i=2,\ldots ,k+1$].
 Como já provamos que latexmath:[$p_1 = q_1$], ambas as expressões de latexmath:[$a$] coincidem.

Colorário:: Se um número primo divide o produto de dois números inteiros, então ele é divisor de um dos dois.

*Teorema de Euclides (de cerca do ano 300 aC!): há um número infinito de primos.*

Prova:: 
Suponhamos que o número de primos é finito e igual ao natural latexmath:[$r$]. Chamemos o maior deles de latexmath:[$p_r$]. Ordenemos e
 demos nomes a todos os primos, assim: latexmath:[$p_1=2 < p_2 = 3 < \cdots < p_r$]. Seja latexmath:[$P = (p_1 p_2  \cdots p_r) + 1$].
 Evidentemente latexmath:[$P$] é maior que cada um dos números primos. Temos duas possibilidades e veremos que ambas levam a uma contradição: +
 Caso latexmath:[$P$] seja primo, então, por ser maior que cada latexmath:[$p_1, \ldots, p_r$], é um novo primo (diferente de 
 latexmath:[$p_1, \ldots, p_r$]), o que contradiz nossa suposição. +
 E, caso latexmath:[$P$] seja não primo, então  latexmath:[$P = (p_1 p_2 \cdots p_r) + 1$] não é fatorável por nenhum dos primos 
 latexmath:[$p_1, \ldots , p_r$]). Portanto, latexmath:[$P $] tem que ser um novo primo (diferente de latexmath:[$p_1, \ldots, p_r$]), o que
 contradiz nossa suposição. +
Como as 2 hipóteses possíveis levaram a contradições da suposição, esta tem que ser falsa, impossível. Portanto, o número de primos é 
infinito. C.Q.D.

.Explicação adicional:
NOTE: caso latexmath:[$P$] seja não primo, tem que ser fatorável por primos (menores que ele mesmo), e chamemos de latexmath:[$p$] um dos
 primos (há pelo menos um deles) que divida latexmath:[$P$]; então, latexmath:[$p$] não pode ser igual ao primo latexmath:[$p_1 = 2$] porque
 o primeiro múltiplo de latexmath:[$p_1$] maior ou igual a latexmath:[$P$] é latexmath:[$(P-1)+p_1$]; idem para o primo latexmath:[$p_2=3$];
 e para o primo latexmath:[$p_3 = 5$]; ...; e para o primo latexmath:[$p_r$]. Isto é, latexmath:[$P = (p_1 p_2 \cdots p_r) + 1$] não é fatorável por nenhum dos primos latexmath:[$p_1, \ldots, p_r$].

IMPORTANT: É um erro comum pensar que esta prova diz que o natural latexmath:[$P = p_1p_2 \cdots p_r +1$] é primo. (Um contra-exemplo é latexmath:[$P = 2 \times 3 \times5 \times 7 \times 11 \times 13 + 1   =  30031$], que é divisível por 59. Desafio-o, para lhes ajudar a entender melhor, que encontre outro contra-exemplo, com latexmath:[$P$] menor). Na verdade, a prova somente usa o fato que, se latexmath:[$P$] não for um primo novo (diferente de latexmath:[$p_1, p_2, \ldots, p_r$]), então há um primo novo que divide latexmath:[$P$].

==== Testeando Primalidade de latexmath:[$n$]

*Primeira abordagem exata* simples- direta- ineficiente: teste se latexmath:[$n$] é divisível por cada um dos naturais 2,3,4,5,6, até latexmath:[$\sqrt{n}$](arredondado para baixo).  No pior caso, o número de divisões é assintoticamente proporcional a latexmath:[$\sqrt{n}$], isto é, é latexmath:[$O(\sqrt{n})$].

*Segunda abordagem exata*: ainda simples- direto- ineficiente: tente dividir por 2, depois por todos os ímpares 3,5,7,9,11,13,15, até latexmath:[$\sqrt{2}$] (arredondado para baixo). No pior caso, o número de divisões ainda é assintoticamente proporcional a latexmath:[$\sqrt{n}$], isto é, é latexmath:[$O(\sqrt{n})$]. Mas é 2 vezes mais eficiente que acima. Eis o programa:

----
prime_factorization(long x)
{
  long i; /* counter */
  long c; /* remaining product to factor */
  c = x;
  while ((c % 2) == 0) {
    printf("%ld\n",2);
    c = c / 2;
  }
  i = 3;
  while (i≤(sqrt(c)+1)) {
    if ((c % i) == 0) {
      printf("%ld\n",i);
      c = c / i;
      }
    else
      i = i + 2;
  }
  if (c > 1) printf("%ld\n",c);
}
----

//_

*Terceira abordagem exata*: Observe que todos os primos são de forma latexmath:[$6k \pm 1$], com 2 e 3 sendo as únicas exceções. Isto 
decorre do fato que todos os inteiros podem ser expressos como (latexmath:[$6k + i$]) para algum inteiro latexmath:[$k$] e para 
latexmath:[$i = -1, 0, 1, 2, 3, \mbox{ ou } 4$]; note que 2 divide latexmath:[$(6k + 0), (6k + 2), (6k + 4)$]; e 3 divide latexmath:[$(6k + 3)$]. Portanto, um método mais eficiente é testar se latexmath:[$n$] é divisível por 2, depois testar se é divisível por 3, então checar 
através de todos os números da forma latexmath:[$6k \pm 1$], até isto ultrapassar latexmath:[$\sqrt{n}$](arredondado para baixo). Isto é,
 checar para latexmath:[$n = 2,3,5,7,11,13,17,19,23,29,31,37,\ldots$]. No pior caso, o número de divisões ainda é assintoticamente 
 proporcional a latexmath:[$\sqrt{n}$], isto é, é latexmath:[$O(\sqrt{n}$]). Mas é 3 vezes mais eficiente que a 2ª abordagem, 6 vezes mais 
 que a 1ª.
 
 Outro *teste exato de primalidade*, ainda simples-direto-ineficiente: Sabe-se que, com exceção dos números 2 e 3, todos os outros números 
primos são expressos pela fórmula latexmath:[$6K \pm 1$]. Mas sabe-se que a imensa maioria dos números expresso pela fórmula 
latexmath:[$6K \pm 1$] não é constituida de números  primos (a relação é necessária, mas não suficiente). O estudo dos não-primos da forma
 latexmath:[$6K \pm 1$] leva à igualdade latexmath:[$K=6 k_2 k_3 \pm k_2 \pm k_3$].{#}(ver <<sec-7-5-3>>). 

Então: dado um número inteiro positivo qualquer latexmath:[$K$]: 

* Se não ocorrer nenhum par de números inteiros positivos latexmath:[$k_2,k_3$] {soluções de #} que satisfaça a igualdade acima, afirma-se
 que os números latexmath:[$6K \pm 1$] são números primos gêmeos (números primos que diferem um do outro de apenas duas unidades). Ex: 
 latexmath:[${29,31}$]. latexmath:[$K=5$]; nenhum latexmath:[$k_2,k_3$] positivos satisfazem {#}, portanto latexmath:[${29, 31}$] são primos
 gêmeos.
* Se não ocorrer nenhum par latexmath:[$k_2,k_3$] {soluções de #} com sinais iguais e ocorrer ao menos um par latexmath:[$k_2,k_3$] com 
sinais diferentes que satisfaça a equação, afirma-se que latexmath:[$6K+1$] é primo e latexmath:[$6K-1$] não é primo. 
* Se não ocorrer nenhum par latexmath:[$k_2,k_3$] {soluções de #} com sinais diferentes e ocorrer ao menos um par latexmath:[$k_2,k_3$] com 
sinais iguais que satisfaça a equação, afirma-se que latexmath:[$6K-1$] é primo e latexmath:[$6K+1$] não é primo. Ex: latexmath:[${23,25}$].
 latexmath:[$K=4$]; onde latexmath:[$k_2,= -1$] , latexmath:[$k_3 = -1$], latexmath:[$6 k_2 k_3 + k_2 + k_3 = 6-1-1= 4$]. Portanto 
 latexmath:[$6K \pm 1 = {23,25}$].

.Algoritmo (exato) AKS para Teste de Primalidade:
[NOTE]
====
Não vou exigir que você saiba mais que a existência e grande vantagem dele, mas veja em livros, artigos ou Internet o algoritmo (exato) AKS 
para testar primalidade, e que ele cai na classe latexmath:[$P$] (polinomial, em máquina determinística). É provado que, no pior caso, seu 
tempo de execução é assintoticamente proporcional a latexmath:[$\log^{(12+ \varepsilon)}{n}$], isto é, é latexmath:[$O(\log^{(12+ \varepsilon)}{n}$], onde latexmath:[$\varepsilon$] é um número pequeno. Em outras palavras, o algoritmo leva menos que uma constante vezes a
 12ª potência (mais latexmath:[$\varepsilon$]) do número de dígitos de latexmath:[$n$]. Ainda não foi provado, mas a experiência prática 
 sempre tem resultado em tempos de execução na ordem de uma constante vezes a 6ª potência (mais latexmath:[$\varepsilon$]) do número de
 dígitos de latexmath:[$n$].
====

[[cap2]]
== Introdução à Lógica Matemática

.Objetivos do capítulo
____________________
Ao final deste capítulo você deverá ser capaz de:

* objetivo 1
* objetivo 2
* objetivo N
____________________

Neste lugar você deve apresentar o conteúdo em forma de diálogo.

NOTE: Para começar a escrever um novo capítulo, copie este arquivo e 
salve com outro nome (não utilize espaço no nome do arquivo). Em seguida,
atualize o arquivo *livro.asc* para incluir o novo arquivo criado. 
Consulte o manual.

=== Motivação. Lógica. Porque só Veremos a Lógica Proposicional

2.1.

==== A Linguagem latexmath:[$\pounds$] da Lógica Proposicional

2.2.

=== Regras de Inferência sobre latexmath:[$\pounds$]. Sistemas Formais. Sistema Natural de Inferência

2.3.

=== Sanidade, Completude, Consistência. Os Problemas da Satisfatibilidade e da Tautologia (são Decidíveis, mas NP-Completos). Modelo e Teoria

2.4

=== Atividades

Além dos livros-texto, há muitos outros bons livros e notas de aula sobre Lógica Matemática, muitos deles disponíveis gratuitamente na internet, inclusive nos links que colocamos ao longo desta unidade. Muitos deles têm centenas de exemplos resolvidos sobre Lógica Proposicional, portanto sugerimos que escolha os livros e notas de aula mais introdutórios e de formalismo menos pesado, os mais fáceis de ler, e neles escolha os exemplos resolvidos para você fazer sem olhar a solução, só depois comparar a sua com a dele. Escolha somente os assuntos que aqui cobrimos, há muita coisa que consideramos difícil demais e não tão necessária, salte tais assuntos.

Recomendamos particularmente as listas de exercícios acompanhadas de gabaritos, da Professora Joseluce de Farias Cunha, em http://www.dsc.ufcg.edu.br/~logica/ . Também recomendamos a Lista de Exercícios do Prof. Loureiro sobre Lógica Proposicional, http://homepages.dcc.ufmg.br/~loureiro/md/md_LE1.pdf, com soluções em http://homepages.dcc.ufmg.br/~loureiro/md/md_LE1_Solucao.pdf, e, futuramente, sobre Cálculo Proposicional http://homepages.dcc.ufmg.br/~loureiro/md/md_LE2.pdf, com soluções em http://homepages.dcc.ufmg.br/~loureiro/md/md_LE2_Solucao.pdf.

=== Recapitulando

Que bom, você já concluiu o capítulo 2! Se foi disciplinado e realmente ``suou'' estudando 4 a 8 h cada semana, deve ter aprendido muitas coisas da parte básica da Lógica Proposicional (a primeira e mais fácil parte da Lógica Matemática, a qual você continuará a ver em Teoria da Computação e em Agentes Inteligentes). Coisas que lhe serão indispensáveis ou muito úteis em todo o resto do curso e sua vida profissional: Você aprendeu mecanismos de raciocínio válidos, esperamos que isso o ajude a diferenciá-los dos falaciosos; aprendeu a sintaxe da linguagem latexmath:[$\pounds$] (libra) da Lógica Proposicional, seus conectivos, as regras para construir fórmulas bem formadas (fbf's); aprendeu a representar as sentenças menores e mais simples da linguagem natural (com apenas um verbo, explícito ou implícito) como símbolos proposicionais, depois a expressar como fbf's as frases que as ajuntam, depois aprendeu a usar as regras da semântica de £ para verificar se argumentos da linguagem natural são válidos ou falaciosos; aprendeu o sistema natural de regras de inferências (particularmente o modus ponens), a base para todo raciocínio exato das provas de teoremas, concepção de programas, análise e prova da corretude dos mesmos, argumentação jurídica e em geral, etc. E aprendeu importantes conceitos que lhe serão úteis a vida inteira: satisfatível e não satisfatível (ou contraditório); tautologia; implicação lógica (além da material) e equivalência lógica (idem); a sanidade, completude e consistência da Lógica Proposicional com o sistema de inferência natural; a decidibilidade mas NP-Completude do problema da satisfatibilidade e do problema da tautologia de uma fbf.

No próximo capítulo, você estudará recorrência (definir funções e programar computadores através de recursão, achar as equações de recorrência da complexidade de um programa, etc.) e como fazer provas por indução, que certamente é o tipo de provas mais frequentemente usado na Ciência da Computação, a ponto de poder se dizer que programar e provar por indução são gêmeos, quem aprende bem um aprende bem o outro, e quem não aprende bem um não aprende bem o outro. Será um ótimo e importante assunto e você já tem certa familiaridade com ele mesmo se não se deu conta, pois muitas provas (e.g., soma dos termos de uma progressão aritmética) e programas (e.g., Fibonacci, Hanói, etc.) do ensino médio e da disciplina Introdução à Programação já usaram o que vamos estudar mais profundamente. Até lá.

=== Apêndice: Falácias Lógicas

Apêndice

////
Sempre termine os arquivos com uma linha em branco.
////


